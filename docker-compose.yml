version: "3.8"

services:
  node:
    build:
      context: .
      dockerfile: ./Dockerfile.node
    ports:
      - "8545:8545"
    volumes:
      - ./packages/blockchain:/app/packages/blockchain
    networks:
      - hardhat-net
    command: "yarn run node"
    env_file:
      - .env

  deploy-contracts:
    build:
      context: .
      dockerfile: ./Dockerfile.node
    depends_on:
      - node
    networks:
      - hardhat-net
    volumes:
      - ./packages/blockchain:/app/packages/blockchain
      - ./shared:/app/shared
    command: "yarn run deploy:local"
    env_file:
      - .env

  ui:
    build:
      context: .
      dockerfile: ./Dockerfile.ui
    ports:
      - "3000:3000"
    volumes:
      - ./packages/ui:/app/packages/ui
      - ./shared:/app/shared
    depends_on:
      - deploy-contracts
    command: "yarn run dev"
    env_file:
      - .env

  backend:
    build:
      context: .
      dockerfile: ./Dockerfile.backend
    ports:
      - "8080:8080"
      - "40000:40000"
    depends_on:
      - deploy-contracts
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined
    command: "air"
    volumes:
      - ./packages/backend:/app/packages/backend

  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - hardhat-net

  replicator:
    build:
      context: .
      dockerfile: ./Dockerfile.replicator
    ports:
      - "3001:3001"
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - NODE_PORT=${NODE_PORT}
      - NODE_ADDRESS=${NODE_ADDRESS}
      - PINATA_JWT=${PINATA_JWT}
      - IPFS_GATEWAY=${IPFS_GATEWAY}
    depends_on:
      - postgres
      - ui
    restart: on-failure
    networks:
      - hardhat-net
    command: "npm run start:dev"
    volumes:
      - ./packages/replica-server:/app/packages/replica-server
      - ./shared:/app/shared

volumes:
  postgres_data:

networks:
  hardhat-net:
    driver: bridge
